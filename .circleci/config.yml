version: 2.1

orbs:
  linter: talkiq/linter@3

executors:
  python:
    docker:
      - image: python:3.7.16
    resource_class: small

jobs:
  x:
    docker:
      - image: python:<<parameters.image>>
    resource_class: <<parameters.resource_class>>
    parameters:
      image:
        type: string
        default: '3.10'
      pip_up:
        type: boolean
        default: false
      resource_class:
        type: string
        default: small
      version:
        type: string
        default: latest
    steps:
      - run: apt-get update -qy
      - run: apt-get install -qy curl strace
      - when:
          condition: <<parameters.pip_up>>
          steps:
            - run: python3 -m pip install --upgrade pip
      - unless:
          condition:
            equal: [ <<parameters.version>>, "latest" ]
          steps:
            - run: echo "export POETRY_VERSION=<<parameters.version>>" >> ${BASH_ENV}
      - run: curl -sSL https://install.python-poetry.org | python3
      - run: echo 'export PATH="/root/.local/bin:${PATH}"' >> ${BASH_ENV}
      - run: python3 --version
      - run: python3 -m pip --version
      - run: poetry config installer.parallel false
      - run: poetry config --list
      - run: |
          sed -i~ 's#package = operation.package#package = operation.package; self._io.write(f"{package}")#/g' /root/.local/share/pypoetry/venv/lib/python<<parameters.image>>/site-packages/poetry/installation/executor.py

      - run: |
          sed -i~ 's#pip-version-check#pip-version-check", "--log", "/tmp/pip.log#g' /root/.local/share/pypoetry/venv/lib/python<<parameters.image>>/site-packages/poetry/utils/pip.py
      - run: cat /root/.local/share/pypoetry/venv/lib/python<<parameters.image>>/site-packages/poetry/utils/pip.py
      - run: strace -o /tmp/poetry.strace --follow-forks poetry self add keyrings.google-artifactregistry.auth -vvv
      - run:
          command: cat /tmp/poetry.strace
          when: always
      - run:
          command: cat /tmp/pip.log
          when: always

workflows:
  run-jobs:
    jobs:
      - linter/pre-commit:
          executor: python
      - x:
          matrix:
            parameters:
              image: ['3.10', '3.11']
              version: ['1.2.2', '1.3.0']
